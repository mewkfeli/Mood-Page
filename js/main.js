if (typeof Howl !== 'undefined') {
  console.log('Howler.js –ø–æ–¥–∫–ª—é—á–µ–Ω!');
} else {
  console.error('Howler.js –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!');
}

// –≠–ª–µ–º–µ–Ω—Ç—ã
const body = document.body;
const slider = document.getElementById('moodSlider');
const emotionText = document.getElementById('emotionText');
const description = document.getElementById('description');
const drawBtn = document.getElementById('drawBtn');
const audioToggle = document.getElementById('audioToggle');
let audioEnabled = true;

// –¶–≤–µ—Ç–∞ –∏ –∑–≤—É–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
const emotions = [
  {
    color: '#3a0ca3',
    emotion: 'üòî –ì—Ä—É—Å—Ç—å',
    textColor: '#ffffff',
    sound: 'sad'
  },
  {
    color: '#4361ee',
    emotion: 'üòå –£–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ',
    textColor: '#ffffff',
    sound: 'calm'
  },
  {
    color: '#4cc9f0',
    emotion: 'üòä –°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ',
    textColor: '#333333',
    sound: 'peaceful'
  },
  {
    color: '#f72585',
    emotion: 'üòÑ –†–∞–¥–æ—Å—Ç—å',
    textColor: '#ffffff',
    sound: 'happy'
  },
  {
    color: '#FF0033',
    emotion: 'üò§ –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ',
    textColor: '#FFFFFF',
    sound: 'stress'
  }
];

// –ó–¥–µ—Å—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ sounds –∏ –≤—Å—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–æ –∑–≤—É–∫–∞–º–∏
const sounds = {
  sad: new Howl({ src: ['assets/audio/sad.mp3'], volume: 0.7, onloaderror: (id, err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ sad.mp3', err) }),
  calm: new Howl({ src: ['assets/audio/calm.mp3'], volume: 0.7, onloaderror: (id, err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ calm.mp3', err) }),
  peaceful: new Howl({ src: ['assets/audio/peaceful.mp3'], volume: 0.7, onloaderror: (id, err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ peaceful.mp3', err) }),
  happy: new Howl({ src: ['assets/audio/happy.mp3'], volume: 0.7, onloaderror: (id, err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ happy.mp3', err) }),
  stress: new Howl({ src: ['assets/audio/stress_sound.mp3'], volume: 0.7, onloaderror: (id, err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ stress_sound.mp3', err) })
};

// –î–æ–±–∞–≤–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Howl-–æ–±—ä–µ–∫—Ç–∞
let currentHowl = null;

function stopAllSounds(fade = true) {
  Object.values(sounds).forEach(sound => {
    if (fade && sound.playing()) {
      sound.fade(sound.volume(), 0, 1000); // –ø–ª–∞–≤–Ω–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ –∑–∞ 1 —Å–µ–∫
      setTimeout(() => sound.stop(), 1000);
    } else {
      sound.stop();
    }
  });
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∑–∫–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π
let lastValue = 50;
let lastMoveTime = 0;
let isFastMove = false;
let fastMoveTimeout;

// –ß–∞—Å—Ç–∏—Ü—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
function createParticles(x, y) {
  for (let i = 0; i < 20; i++) {
    const particle = document.createElement('div');
    particle.classList.add('particle');
    document.body.appendChild(particle);

    const size = Math.random() * 15 + 5;
    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    particle.style.left = `${x}px`;
    particle.style.top = `${y}px`;

    const animationTime = Math.random() * 2 + 1;
    particle.style.transition = `all ${animationTime}s linear`;

    setTimeout(() => {
      particle.style.transform = `translate(${(Math.random() - 0.5) * 200}px, ${(Math.random() - 0.5) * 200}px)`;
      particle.style.opacity = '0';
    }, 10);

    setTimeout(() => {
      particle.remove();
    }, animationTime * 1000);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª–∑—É–Ω–∫–∞
slider.addEventListener('input', (e) => {
  const value = e.target.value;
  const now = Date.now();
  const speed = Math.abs(value - lastValue) / (now - lastMoveTime);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑–∫–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
  if (speed > 0.5 && now - lastMoveTime < 100) {
    if (!isFastMove) {
      isFastMove = true;
      description.textContent = "–≠–º–æ—Ü–∏–∏ ‚Äî —ç—Ç–æ —ç–Ω–µ—Ä–≥–∏—è. –ù–∞–ø—Ä–∞–≤—å –µ—ë –≤ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ.";
      drawBtn.style.display = "block";
      createParticles(e.clientX || window.innerWidth / 2, e.clientY || window.innerHeight / 2);
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä —Å–±—Ä–æ—Å–∞
    clearTimeout(fastMoveTimeout);
    fastMoveTimeout = setTimeout(() => {
      isFastMove = false;
      description.textContent = "–ü–µ—Ä–µ–¥–≤–∏–Ω—å—Ç–µ –ø–æ–ª–∑—É–Ω–æ–∫ ‚Äî –∏ –º–∏—Ä –≤–æ–∫—Ä—É–≥ –∏–∑–º–µ–Ω–∏—Ç—Å—è";
      drawBtn.style.display = "none";
    }, 5000);
  }

  lastValue = value;
  lastMoveTime = now;

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∏ —ç–º–æ—Ü–∏—é
  updateMood(value);

  // –°–±—Ä–æ—Å —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–ª–∏—Ç–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–≤–∏–≥–∞–µ—Ç –ø–æ–ª–∑—É–Ω–æ–∫
  if (isFinalFill) {
    overlay.style.opacity = '0';
    finalText.style.opacity = '0';
    finalBtn.style.opacity = '0';
    isFinalFill = false;
  }

  // –°–±—Ä–æ—Å –∏ –∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –æ–∂–∏–¥–∞–Ω–∏—è
  clearTimeout(idleTimeout);
  idleTimeout = setTimeout(() => {
    // –ß–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è ‚Äî –ø–ª–∞–≤–Ω–æ–µ –∑–∞–ª–∏—Ç–∏–µ
    const value = slider.value;
    const moodIndex = Math.floor(value / (100 / (emotions.length)));
    const mood = emotions[Math.min(moodIndex, emotions.length - 1)];
    overlay.style.background = mood.color;
    overlay.style.opacity = '1';
    showFinalMessage(mood);
    isFinalFill = true;
  }, 10000);
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–æ –∑–≤—É–∫–æ–º
function updateMood(value) {
    const moodIndex = Math.floor(value / (100 / (emotions.length)));
    const mood = emotions[Math.min(moodIndex, emotions.length - 1)];

    body.style.background = mood.color;
    emotionText.textContent = mood.emotion;
    emotionText.style.color = mood.textColor;

    // –ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
    if (audioEnabled) {
        if (currentHowl && currentHowl.playing()) {
            currentHowl.fade(currentHowl.volume(), 0, 1000);
            setTimeout(() => {
                currentHowl.stop();
                playMoodSound(mood.sound);
            }, 1000);
        } else {
            playMoodSound(mood.sound);
        }
        currentSound = mood.sound;
    }

    // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤ p5.js
    if (typeof setMoodIndex === 'function') {
        setMoodIndex(Math.min(moodIndex, emotions.length - 1));
    }
}

function playMoodSound(soundKey) {
    const howl = sounds[soundKey];
    if (howl) {
        howl.volume(0);
        howl.play();
        howl.fade(0, 0.7, 1000); // –ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∑–∞ 1 —Å–µ–∫
        currentHowl = howl;
    }
}

// –ö–Ω–æ–ø–∫–∞ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
drawBtn.addEventListener('click', () => {
    const drawContainer = document.querySelector('.container');
    location.href = 'draw.html'; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∏—Å–æ–≤–∞–Ω–∏—è
});

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤—É–∫–æ–º
audioToggle.addEventListener('click', () => {
    audioEnabled = !audioEnabled;

    if (audioEnabled) {
        if (currentSound) {
            playMoodSound(currentSound);
        }
        audioToggle.textContent = 'üîá –ó–≤—É–∫ –í–´–ö–õ';
    } else {
        stopAllSounds(true);
        audioToggle.textContent = 'üîä –ó–≤—É–∫ –í–ö–õ';
    }
});

// –î–æ–±–∞–≤–∏–º overlay –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–ª–∏—Ç–∏—è
let overlay = document.createElement('div');
overlay.style.position = 'fixed';
overlay.style.top = 0;
overlay.style.left = 0;
overlay.style.width = '100vw';
overlay.style.height = '100vh';
overlay.style.pointerEvents = 'none';
overlay.style.opacity = '0';
overlay.style.transition = 'opacity 2s';
overlay.style.zIndex = '1000';
overlay.style.display = 'flex';
overlay.style.flexDirection = 'column';
overlay.style.justifyContent = 'center';
overlay.style.alignItems = 'center';
overlay.style.textAlign = 'center';
document.body.appendChild(overlay);

// –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏
let finalText = document.createElement('div');
finalText.style.color = '#fff';
finalText.style.fontSize = '2rem';
finalText.style.marginBottom = '2rem';
finalText.style.textShadow = '0 2px 8px #0008';
finalText.style.opacity = '0';
finalText.style.transition = 'opacity 1s';

let finalBtn = document.createElement('button');
finalBtn.style.fontSize = '1.2rem';
finalBtn.style.padding = '1rem 2rem';
finalBtn.style.border = 'none';
finalBtn.style.borderRadius = '1.5rem';
finalBtn.style.background = '#fff';
finalBtn.style.color = '#222';
finalBtn.style.cursor = 'pointer';
finalBtn.style.opacity = '0';
finalBtn.style.transition = 'opacity 1s';

overlay.appendChild(finalText);
overlay.appendChild(finalBtn);

let idleTimeout = null;
let isFinalFill = false;

// –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–∂–µ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
clearTimeout(idleTimeout);
idleTimeout = setTimeout(() => {
  const value = slider.value;
  const moodIndex = Math.floor(value / (100 / (emotions.length)));
  const mood = emotions[Math.min(moodIndex, emotions.length - 1)];
  overlay.style.background = mood.color;
  overlay.style.opacity = '1';
  showFinalMessage(mood);
  isFinalFill = true;
}, 10000);

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ ---
function showFinalMessage(mood) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –∏–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    const positive = ['happy', 'peaceful', 'calm'].includes(mood.sound);

    if (positive) {
        finalText.textContent = '–ó–∞–ø–æ–º–Ω–∏ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –û–Ω–æ —Ç–≤–æ—ë.';
        finalBtn.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ü–≤–µ—Ç';
        finalBtn.onclick = function() {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PNG —Å —ç—Ç–∏–º —Ü–≤–µ—Ç–æ–º
            let canvas = document.createElement('canvas');
            canvas.width = 400;
            canvas.height = 200;
            let ctx = canvas.getContext('2d');
            ctx.fillStyle = mood.color;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.font = "bold 24px sans-serif";
            ctx.fillStyle = mood.textColor || "#fff";
            ctx.textAlign = "center";
            ctx.fillText(mood.emotion, 200, 110);
            // –°–∫–∞—á–∏–≤–∞–µ–º
            let link = document.createElement('a');
            link.download = 'mood-color.png';
            link.href = canvas.toDataURL();
            link.click();
        };
    } else {
        finalText.textContent = '–í—Å—ë –ø—Ä–æ—Ö–æ–¥–∏—Ç. –î–∞–≤–∞–π –≤—ã–¥–æ—Ö–Ω–µ–º';
        finalBtn.textContent = '–î—ã—à–∞—Ç—å';
        finalBtn.onclick = function() {
            startBreathAnimation();
        };
    }
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    setTimeout(() => {
        finalText.style.opacity = '1';
        finalBtn.style.opacity = '1';
    }, 800);
}

// --- –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥—ã—Ö–∞–Ω–∏—è ---
function startBreathAnimation() {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    finalText.style.opacity = '0';
    finalBtn.style.opacity = '0';

    setTimeout(() => {
        finalText.textContent = '';
        finalBtn.textContent = '';
        // –°–æ–∑–¥–∞—ë–º –∫—Ä—É–≥ –¥–ª—è –¥—ã—Ö–∞–Ω–∏—è
        let breathCircle = document.createElement('div');
        breathCircle.style.width = '80px';
        breathCircle.style.height = '80px';
        breathCircle.style.borderRadius = '50%';
        breathCircle.style.background = 'rgba(255,255,255,0.7)';
        breathCircle.style.margin = '0 auto';
        breathCircle.style.transition = 'all 4s cubic-bezier(.4,0,.2,1)';
        overlay.appendChild(breathCircle);

        let breathText = document.createElement('div');
        breathText.style.color = '#fff';
        breathText.style.fontSize = '2rem';
        breathText.style.marginTop = '2rem';
        breathText.style.textShadow = '0 2px 8px #0008';
        overlay.appendChild(breathText);

        let phase = 0;
        function breathStep() {
            if (phase % 2 === 0) {
                // –í–¥–æ—Ö
                breathCircle.style.transform = 'scale(2)';
                breathText.textContent = '–í–¥–æ—Ö...';
            } else {
                // –í—ã–¥–æ—Ö
                breathCircle.style.transform = 'scale(1)';
                breathText.textContent = '–í—ã–¥–æ—Ö...';
            }
            phase++;
        }
        breathStep();
        let breathInterval = setInterval(breathStep, 4000);

        // –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫—Ä—ã—Ç—å"
        let closeBtn = document.createElement('button');
        closeBtn.textContent = '–ó–∞–∫—Ä—ã—Ç—å';
        closeBtn.style.marginTop = '2rem';
        closeBtn.style.fontSize = '1.2rem';
        closeBtn.style.padding = '0.7rem 2rem';
        closeBtn.style.border = 'none';
        closeBtn.style.borderRadius = '1.5rem';
        closeBtn.style.background = '#fff';
        closeBtn.style.color = '#222';
        closeBtn.style.cursor = 'pointer';
        overlay.appendChild(closeBtn);

        closeBtn.onclick = function() {
            clearInterval(breathInterval);
            overlay.removeChild(breathCircle);
            overlay.removeChild(breathText);
            overlay.removeChild(closeBtn);
            overlay.style.opacity = '0';
            isFinalFill = false;
        };
    }, 1000);
}